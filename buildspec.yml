version: 0.2

env:
  variables:
    # テスト対象のアプリケーションURL（デプロイ後のURL）
    #TARGET_URL: "https://todolist-sample.com"
    # Playwrightの設定
    PLAYWRIGHT_BROWSERS_PATH: "/ms-playwright"
    # HTMLレポートを生成した後にブラウザを自動で起動しない
    PLAYWRIGHT_HTML_REPORT_OPEN: "0"
    # CIモードを強制的に有効にする
    CI: "1"
    # レポート保存用のS3バケット名
    REPORT_S3_BUCKET: "playwright-reports-v1"
  # secrets-manager:
    # 必要に応じて認証情報などを追加（今は特になし）

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "Installing test dependencies"
      - echo "Setting up Playwright"
      
      # AWS CLIの確認
      - which aws
      - aws --version
      
      # システム依存関係をインストール
      - apt-get update
      - apt-get install -y libgbm-dev libxkbcommon-x11-0 libgtk-3-0 libasound2 libx11-xcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxrandr2 libxshmfence1 libglib2.0-0 libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libdbus-1-3 libatspi2.0-0 libxcursor1 libxi6 libxtst6 libpango-1.0-0 libcairo2
      
      # プロジェクトの依存関係をインストール
      - npm ci
      
      # Playwrightのブラウザとシステム依存関係をインストール
      - npx playwright install chromium --with-deps || echo "Playwright browser installation failed, continuing anyway"

  pre_build:
    commands:
      - echo "Test preparation started on `date`"
      - echo "Checking connectivity to target application"
      #- curl -s -o /dev/null -w "%{http_code}" $TARGET_URL || echo "Warning: Target application may not be available"
      - echo "Setting exit code handling to continue on test failures"
      - set +e  # コマンドが失敗してもスクリプトの実行が継続される

  build:
    commands:
      - echo "Tests started on `date`"
      
      # E2Eテスト（Playwright）の実行
      - echo "Running E2E tests with Playwright"
      # CodeBuildはヘッドレス環境のため、--headedオプションは削除
      # dot,htmlレポーターを使用してHTMLレポートを生成しつつ、サーバーの起動を防止
      - npx playwright test --workers=1 tests/testScenario.spec.ts --reporter=dot,html --update-snapshots || true
      - echo "E2E tests completed"

  post_build:
    commands:
      - echo "Tests completed on `date`"
      - set -e  # 通常の終了コード処理に戻す
      - echo "Generating test summary"
      
      # AWS CLIのパスを確認（エラーが発生しても続行）
      - which aws || echo "AWS CLI not found, skipping S3 upload"
      - echo "PATH環境変数の内容を表示"
      - echo $PATH
      
      # playwright-reportディレクトリの内容を確認
      - echo "Checking playwright-report directory:"
      - ls -la playwright-report || echo "playwright-report directory not found"
      - echo "Checking playwright-report/data directory:"
      - ls -la playwright-report/data || echo "playwright-report/data directory not found"
      
      # スクリーンショット比較用のファイルを確認
      - echo "Checking screenshot comparison files:"
      - find playwright-report -name "*-actual.png" || echo "No actual screenshots found"
      - find playwright-report -name "*-expected.png" || echo "No expected screenshots found"
      - find playwright-report -name "*-diff.png" || echo "No diff screenshots found"
      
      # スクリーンショット比較用のファイルのContent-Typeを確認
      - echo "Checking Content-Type of screenshot comparison files:"
      - find playwright-report -name "*-actual.png" -exec file {} \; || echo "No actual screenshots found"
      - find playwright-report -name "*-expected.png" -exec file {} \; || echo "No expected screenshots found"
      - find playwright-report -name "*-diff.png" -exec file {} \; || echo "No diff screenshots found"
      
      # playwright-report/dataディレクトリ内のファイルを詳細に確認
      - echo "Checking files in playwright-report/data directory:"
      - find playwright-report/data -type f -exec file {} \; || echo "No files found in playwright-report/data"
      
      # Zipファイルを解凍して内容を確認
      #- echo "Extracting and checking zip files:"
      #- mkdir -p extracted-diffs
      #- find playwright-report/data -name "*.zip" -exec sh -c 'unzip -o "$0" -d extracted-diffs/$(basename "$0" .zip)' {} \; || echo "No zip files found or extraction failed"
      #- ls -la extracted-diffs || echo "No extracted files"
      #- find extracted-diffs -type f -exec file {} \; || echo "No files found in extracted-diffs"
      
      # 解凍したファイルをplaywright-report/dataディレクトリにコピー
      #- echo "Copying extracted files to playwright-report/data directory:"
      #- find extracted-diffs -type f -name "*.png" -exec cp {} playwright-report/data/ \; || echo "No PNG files found in extracted-diffs"
      
      # HTMLファイル内のリンクを確認
      - echo "Checking links in HTML files:"
      - grep -r "\.png" --include="*.html" playwright-report/ || echo "No PNG links found in HTML files"
      - grep -r "\.zip" --include="*.html" playwright-report/ || echo "No ZIP links found in HTML files"
      
      # test-resultsディレクトリの内容を確認
      - echo "Checking test-results directory:"
      - ls -la test-results || echo "test-results directory not found"
      - find test-results -type f -exec file {} \; || echo "No files found in test-results"
      
      # S3にアップロード
      - echo "Uploading reports to S3"
      - REPORT_FOLDER=playwright_report_$(date +%Y%m%d_%H%M%S)
          
      # スクリーンショット比較用のファイルをコピー
      - echo "Copying screenshot comparison files to separate directory"
      - mkdir -p screenshot-comparison
      - find playwright-report -name "*-actual.png" -exec cp {} screenshot-comparison/ \;
      - find playwright-report -name "*-expected.png" -exec cp {} screenshot-comparison/ \;
      - find playwright-report -name "*-diff.png" -exec cp {} screenshot-comparison/ \;

reports:
  e2e-reports:
    files:
      - playwright-report/index.html
    file-format: HTML
    base-directory: .

artifacts:
  files:
    - playwright-report/**/*
  name: playwright-report-$CODEBUILD_BUILD_ID
  base-directory: .
  discard-paths: no
